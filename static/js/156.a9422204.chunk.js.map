{"version":3,"file":"static/js/156.a9422204.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/Pages/Contacts/Contacts.module.css?47f7","redux/contacts/contacts-selectors.jsx","webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactForm/Form.module.css?312a","components/ContactForm/ContactForm.jsx","Pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formTitle\":\"Contacts_formTitle__omWuu\",\"contactTitle\":\"Contacts_contactTitle__Jv3+H\",\"filterForm\":\"Contacts_filterForm__Xlokg\",\"filterBlock\":\"Contacts_filterBlock__zvr9H\"};","export const selectLoading = state => state.contacts.isLoading;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectAllContacts = state => state.contacts.items;\n\nexport const selectContactFilter = state => state.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactItem\":\"ContactItem_contactItem__Z4FuP\",\"contactButton\":\"ContactItem_contactButton__VcuwI\",\"contactName\":\"ContactItem_contactName__ZAMAK\"};","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contacts-operations';\nimport css from './ContactItem.module.css';\nimport Notiflix from 'notiflix';\n\nexport const Contact = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n\n  const hendleDeleteContact = () => {\n    dispatch(deleteContact(id));\n    Notiflix.Notify.success(`${name} was deleted`);\n  };\n  return (\n    <li className={css.contactItem} key={id}>\n      <span className={css.contactName}>{name}</span>\n      <span className={css.contactNumber}>{number}</span>\n      <button className={css.contactButton} onClick={hendleDeleteContact}>\n        Delete\n      </button>\n    </li>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\"};","import { useSelector } from 'react-redux';\nimport {\n  selectAllContacts,\n  selectFilter,\n} from 'redux/contacts/contacts-selectors';\nimport { Contact } from 'components/ContactItem/ContactItem';\nimport css from './ContactList.module.css';\n\nexport function ContactList() {\n  const contacts = useSelector(selectAllContacts);\n  const filter = useSelector(selectFilter);\n\n  const lowerFilter = filter.toLowerCase();\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(lowerFilter)\n  );\n\n  return (\n    <div>\n      <ul className={css.contactList}>\n        {filteredContacts.map(contact => (\n          <Contact key={contact.id} {...contact} />\n        ))}\n      </ul>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"filterForm\":\"Filter_filterForm__+l+6Q\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { selectContactFilter } from 'redux/contacts/contacts-selectors';\nimport { setContactFilter } from '../../redux/contacts/filterSlice';\nimport React from 'react';\n\nimport css from './Filter.module.css';\nimport { useState } from 'react';\n\nexport function Filter() {\n  const filterDefault = useSelector(selectContactFilter);\n  const [filter, setFilter] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = evt => {\n    const val = evt.currentTarget.value;\n    setFilter(val);\n    dispatch(setContactFilter(val));\n  };\n\n  return (\n    <>\n      <label htmlFor=\"filter\">Find contacts by name</label>\n      <input\n        className={css.filterForm}\n        name=\"filter\"\n        type=\"text\"\n        value={filter || filterDefault}\n        onChange={handleChange}\n        placeholder=\"Search...\"\n      />\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__uexYC\",\"formLabel\":\"Form_formLabel__7HOo4\",\"formInput\":\"Form_formInput__FPFOE\",\"formButton\":\"Form_formButton__jnJWY\"};","import css from './Form.module.css';\nimport Notiflix from 'notiflix';\nimport { selectAllContacts } from '../../redux/contacts/contacts-selectors';\nimport { addContact } from 'redux/contacts/contacts-operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\n\nexport function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectAllContacts);\n\n  const handleName = evt => {\n    setName(evt.currentTarget.value);\n  };\n  const handleNumber = evt => {\n    setNumber(evt.currentTarget.value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const isNameExists = contacts.some(\n      contact => contact.name?.toLowerCase() === name.toLocaleLowerCase()\n    );\n\n    if (isNameExists) {\n      Notiflix.Notify.warning(`${name} is already in contacts`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n    Notiflix.Notify.success(`Contact ${name} added`);\n  };\n\n  return (\n    <>\n      <form autoComplete=\"off\" onSubmit={handleSubmit} className={css.form}>\n        <label htmlFor=\"name\" className={css.formLabel}>\n          Name\n        </label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          value={name}\n          onChange={handleName}\n          placeholder=\"Add name\"\n          className={css.formInput}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <label htmlFor=\"number\" className={css.formLabel}>\n          Number\n        </label>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          id=\"number\"\n          value={number}\n          onChange={handleNumber}\n          placeholder=\"Add number: \"\n          className={css.formInput}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n\n        <button type=\"submit\" className={css.formButton}>\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n}\n","import css from './Contacts.module.css';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nexport default function Contacts() {\n  return (\n    <section>\n      <h1 className={css.formTitle}>Phonebook</h1>\n      <ContactForm />\n      <div className={css.filterBlock}>\n        <h2 className={css.contactTitle}>Contacts</h2>\n        <Filter />\n      </div>\n      <ContactList />\n    </section>\n  );\n}\n"],"names":["selectFilter","state","filter","selectAllContacts","contacts","items","selectContactFilter","Contact","name","number","id","dispatch","useDispatch","className","css","onClick","deleteContact","Notiflix","ContactList","useSelector","lowerFilter","toLowerCase","filteredContacts","contact","includes","map","Filter","filterDefault","useState","setFilter","htmlFor","type","value","onChange","evt","val","currentTarget","setContactFilter","placeholder","ContactForm","setName","setNumber","autoComplete","onSubmit","preventDefault","some","toLocaleLowerCase","addContact","pattern","title","required","Contacts"],"sourceRoot":""}