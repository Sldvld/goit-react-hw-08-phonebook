{"version":3,"file":"static/js/808.9d66eb7b.chunk.js","mappings":"2NACA,GAAgB,KAAO,oBAAoB,UAAY,yBAAyB,UAAY,yBAAyB,WAAa,0BAA0B,UAAY,0B,2BCKzJ,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAQC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,KAAf,IAC/B,GAAsCL,EAAAA,EAAAA,WAAS,GAA/C,eAAOS,EAAP,KAAoBC,EAApB,MAEAC,EAAAA,EAAAA,YAAU,WACJF,GAAeJ,IACjBO,IAAAA,OAAAA,QAAwB,0CACxBF,GAAe,GAElB,GAAE,CAACD,EAAaJ,IAEjB,IAAMQ,EAAe,SAAAC,GACnB,MAAwBA,EAAIC,OAApBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,OAAQD,GACN,IAAK,QACHd,EAASe,GACT,MACF,IAAK,WACHb,EAAYa,GACZ,MACF,QACE,OAEL,EAeD,OACE,oBAASC,UAAWC,EAAAA,eAApB,UACE,kBAAMC,SAfW,SAAAN,GACnBA,EAAIO,iBACJ,IAAMC,EAAOR,EAAIS,cACjBzB,GACE0B,EAAAA,EAAAA,IAAM,CACJvB,MAAOqB,EAAKG,SAASxB,MAAMgB,MAC3Bd,SAAUmB,EAAKG,SAAStB,SAASc,SAGrCP,GAAe,GACfY,EAAKI,OACN,EAIiCR,UAAWC,EAAAA,KAAzC,WACE,kBAAOD,UAAWC,EAAAA,UAAlB,SAAiC,WACjC,kBACEQ,KAAK,QACLX,KAAK,QACLY,aAAa,MACbX,MAAOhB,EACP4B,SAAUhB,EACVK,UAAWC,EAAAA,UACXW,YAAY,oBACZC,UAAQ,KAEV,kBAAOb,UAAWC,EAAAA,UAAlB,SAAiC,cACjC,kBACEQ,KAAK,WACLX,KAAK,WACLY,aAAa,MACbX,MAAOd,EACP0B,SAAUhB,EACVK,UAAWC,EAAAA,UACXW,YAAY,0BACZC,UAAQ,KAEV,mBAAQJ,KAAK,SAAST,UAAWC,EAAAA,WAAjC,SAAiD,eAMxD,C","sources":["webpack://react-homework-template/./src/Pages/Login/Login.module.css?c471","Pages/Login/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Login_form__l5-+y\",\"formLabel\":\"Login_formLabel__ZZgT1\",\"formInput\":\"Login_formInput__p-3TU\",\"formButton\":\"Login_formButton__HtFjx\",\"formTitle\":\"Login_formTitle__1K67g\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { useState, useEffect } from 'react';\nimport { logIn } from '../../redux/auth/auth-operations';\nimport css from './Login.module.css';\nimport Notiflix from 'notiflix';\n\nexport default function Login() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const error = useSelector(state => state.auth.error);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  useEffect(() => {\n    if (isSubmitted && error) {\n      Notiflix.Notify.failure('Incorrect login or password is entered');\n      setIsSubmitted(false);\n    }\n  }, [isSubmitted, error]);\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    setIsSubmitted(true);\n    form.reset();\n  };\n\n  return (\n    <section className={css.sectionWrapper}>\n      <form onSubmit={handleSubmit} className={css.form}>\n        <label className={css.formLabel}>Email</label>\n        <input\n          type=\"email\"\n          name=\"email\"\n          autoComplete=\"off\"\n          value={email}\n          onChange={handleChange}\n          className={css.formInput}\n          placeholder=\"Enter your E-mail\"\n          required\n        />\n        <label className={css.formLabel}>Password</label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          autoComplete=\"off\"\n          value={password}\n          onChange={handleChange}\n          className={css.formInput}\n          placeholder=\"Enter a strong password\"\n          required\n        />\n        <button type=\"submit\" className={css.formButton}>\n          Log In\n        </button>\n      </form>\n    </section>\n  );\n}\n"],"names":["Login","dispatch","useDispatch","useState","email","setEmail","password","setPassword","error","useSelector","state","auth","isSubmitted","setIsSubmitted","useEffect","Notiflix","handleChange","evt","target","name","value","className","css","onSubmit","preventDefault","form","currentTarget","logIn","elements","reset","type","autoComplete","onChange","placeholder","required"],"sourceRoot":""}